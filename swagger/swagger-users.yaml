openapi: 3.0.0
info:
  title: Beengala API
  version: 1.0.0
  description: API for Beengala application

tags:
  - name: Users
    description: Operations related to users

paths:
  /users:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Artist'
                - $ref: '#/components/schemas/Buyer'
      responses:
        201:
          description: Successfully created user
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Artist'
                  - $ref: '#/components/schemas/Buyer'
        400:
          description: All fields are required
        404:
          description: User not found after insertion
        409:
          description: Email is already in use
        500:
          description: Internal server error

  /users/{userId}:
    delete:
      summary: Delete a user and their associated profile
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          description: Unique ID of the user to delete
          schema:
            type: integer
      responses:
        200:
          description: User and their associated profile (artist or buyer) deleted successfully
        404:
          description: User not found or no associated profile exists
        500:
          description: Internal server error

    put:
      summary: Update a user's information
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Artist'
                - $ref: '#/components/schemas/Buyer'
      responses:
        200:
          description: User information updated successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Artist'
                  - $ref: '#/components/schemas/Buyer'
        404:
          description: User not found
        500:
          description: Internal server error

components:
  schemas:
    Artist:
      type: object
      properties:
        userId:
          type: integer
        userType:
          type: string
        name:
          type: string
        lastname:
          type: string
        email:
          type: string
        semblance:
          type: string
        art_style:
          type: string
        birthday:
          type: string
          format: date
        origin:
          type: string
        sex:
          type: string
        city:
          type: string

    Buyer:
      type: object
      properties:
        userId:
          type: integer
        userType:
          type: string
        name:
          type: string
        lastname:
          type: string
        email:
          type: string
        buyer_type:
          type: string
        art_styles:
          type: string
        birthday:
          type: string
          format: date
        origin:
          type: string
        sex:
          type: string
        city:
          type: string
